{"ast":null,"code":"var _jsxFileName = \"D:\\\\backup www\\\\UltimateStream\\\\frontend\\\\src\\\\components\\\\ManageModerators.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManageModerators() {\n  _s();\n  const [moderators, setModerators] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [streamerId, setStreamerId] = useState(''); // Assuming you have the streamerId available\n\n  useEffect(() => {\n    // Fetch existing moderators\n    axios.get('/api/moderators').then(response => setModerators(response.data)).catch(error => console.error(error));\n  }, []);\n  const handleAddModerator = async () => {\n    try {\n      const response = await axios.post('/api/moderators', {\n        username,\n        password,\n        streamerId\n      });\n      setModerators([...moderators, response.data]);\n    } catch (error) {\n      console.error('Add moderator error:', error.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Manage Moderators\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"border p-2 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"border p-2 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddModerator,\n        className: \"bg-blue-500 text-white p-2\",\n        children: \"Add Moderator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-disc pl-5\",\n      children: moderators.map(moderator => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-2\",\n        children: moderator.username\n      }, moderator._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(ManageModerators, \"NAhHJUe5rI5gcNY0l/WUTaePVts=\");\n_c = ManageModerators;\nexport default ManageModerators;\nvar _c;\n$RefreshReg$(_c, \"ManageModerators\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ManageModerators","_s","moderators","setModerators","username","setUsername","password","setPassword","streamerId","setStreamerId","get","then","response","data","catch","error","console","handleAddModerator","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","moderator","_id","_c","$RefreshReg$"],"sources":["D:/backup www/UltimateStream/frontend/src/components/ManageModerators.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ManageModerators() {\r\n  const [moderators, setModerators] = useState([]);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [streamerId, setStreamerId] = useState(''); // Assuming you have the streamerId available\r\n\r\n  useEffect(() => {\r\n    // Fetch existing moderators\r\n    axios.get('/api/moderators')\r\n      .then(response => setModerators(response.data))\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n\r\n  const handleAddModerator = async () => {\r\n    try {\r\n      const response = await axios.post('/api/moderators', { username, password, streamerId });\r\n      setModerators([...moderators, response.data]);\r\n    } catch (error) {\r\n      console.error('Add moderator error:', error.response.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Manage Moderators</h1>\r\n      <div className=\"mb-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          className=\"border p-2 mr-2\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          className=\"border p-2 mr-2\"\r\n        />\r\n        <button onClick={handleAddModerator} className=\"bg-blue-500 text-white p-2\">Add Moderator</button>\r\n      </div>\r\n      <ul className=\"list-disc pl-5\">\r\n        {moderators.map(moderator => (\r\n          <li key={moderator._id} className=\"mb-2\">{moderator.username}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageModerators;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}